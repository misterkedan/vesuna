import { Alea } from './Alea';
import { Random } from './Random';
import { Generator } from '../generators/Generator';

class VesunaLite extends Random {

	/**
	 * Creates a string-seeded PRNG, that will always generate the same
	 * pseudorandom number sequence for a given seed, coupled with a basic
	 * seed generator.
	 * @param {String} seed The initial seed.
	 * @param {Generator} generator The seed generator used for autoseeding.
	 */
	constructor( seed, generator = new Generator() ) {

		super();

		this.generator = generator;

		if ( seed ) this.seed = seed;
		else this.autoseed();

	}

	/**
	 * Seeds this instance with a string generated by its generator.
	 */
	autoseed() {

		this.seed = this.generator.generate();

	}

	/**
	 * Reset the pseudorandom number sequence. If the seed is unchanged,
	 * the sequence will be the same every time.
	 */
	reset() {

		this.prng = new Alea( this.seed );

	}

	/*-------------------------------------------------------------------------/

		Getters & Setters

	/-------------------------------------------------------------------------*/

	get seed() {

		return this._seed;

	}

	set seed( string ) {

		this._seed = string;
		this.reset();

	}

}

export { VesunaLite };
